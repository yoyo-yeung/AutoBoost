Method: <org.apache.commons.math.linear.RealMatrixImpl: void copyIn(double[][])>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-4.0], [-2.0]]], Related test: test25(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void setSubMatrix(double[][],int,int)>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-4.0], [-2.0]],0,0], Related test: test25(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void <init>(double[][])>, Callee: null, Params: [[[-2.0], [-1.0]]], Related test: test37(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getRowDimension()>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test37(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getColumnDimension()>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test37(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double getEntry(int,int)>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [1,0], Related test: test36(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isValidCoordinate(int,int)>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [1,0], Related test: test36(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.estimation.EstimatedParameter: void setEstimate(double)>, Callee: {name=unbound0, estimate=2.0, bound=false,}, Params: [0.0], Related test: test41(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double getEntry(int,int)>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [1,0], Related test: test40(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isValidCoordinate(int,int)>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [1,0], Related test: test40(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void copyIn(double[][])>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-2.0], [-1.0]]], Related test: test37(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void <init>(double[][])>, Callee: null, Params: [[[-9.0], [-17.0]]], Related test: test29(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.estimation.EstimatedParameter: double getEstimate()>, Callee: {name=unbound0, estimate=0.0, bound=false,}, Params: [], Related test: test41(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double getEntry(int,int)>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [0,0], Related test: test35(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isValidCoordinate(int,int)>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [0,0], Related test: test35(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double getEntry(int,int)>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [0,0], Related test: test39(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isValidCoordinate(int,int)>, Callee: {data=[[-2.0], [-1.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [0,0], Related test: test39(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void setSubMatrix(double[][],int,int)>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-9.0], [-17.0]],0,0], Related test: test29(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void <init>(double[][])>, Callee: null, Params: [[[3.0, 3.0], [3.0, 11.0]]], Related test: test27(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getRowDimension()>, Callee: {data=[[-4.0], [-2.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test25(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getColumnDimension()>, Callee: {data=[[-4.0], [-2.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test25(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void copyIn(double[][])>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-9.0], [-17.0]]], Related test: test29(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void <init>(double[][])>, Callee: null, Params: [[[-4.0], [-2.0]]], Related test: test25(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getColumnDimension()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=[[3.0, 3.0], [1.0, 8.0]], permutation=[0, 1], parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test34(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void setSubMatrix(double[][],int,int)>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[-2.0], [-1.0]],0,0], Related test: test37(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getRowDimension()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test27(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getColumnDimension()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test27(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isSquare()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test31(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: boolean isSingular()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test32(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void luDecompose()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test32(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double[][] getData()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test32(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: double[][] copyOut()>, Callee: {data=[[3.0, 3.0], [3.0, 11.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test32(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void copyIn(double[][])>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[3.0, 3.0], [3.0, 11.0]]], Related test: test27(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getRowDimension()>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test29(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: int getColumnDimension()>, Callee: {data=[[-9.0], [-17.0]], lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [], Related test: test29(org.apache.commons.math.estimation.Math100AB_1_Test)
Method: <org.apache.commons.math.linear.RealMatrixImpl: void setSubMatrix(double[][],int,int)>, Callee: {data=null, lu=null, permutation=null, parity=1, TOO_SMALL=1.0E-11,}, Params: [[[3.0, 3.0], [3.0, 11.0]],0,0], Related test: test27(org.apache.commons.math.estimation.Math100AB_1_Test)
