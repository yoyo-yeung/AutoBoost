Method: <org.apache.commons.math.linear.Array2DRowRealMatrix: double getEntry(int,int)>, Callee: {lu=null, data=[[1.0, 0.09999999999999998, 0.0, 6.9], [0.0, 1.0, 1.0, 23.0]],}, Params: [1,1], Related test: test1(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.util.MathUtils: boolean equals(double,double,double)>, Callee: null, Params: [23.0,0.0,1.0E-6], Related test: test125(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.util.MathUtils: boolean equals(double,double)>, Callee: null, Params: [23.0,1.0], Related test: test123(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.linear.ArrayRealVector: double dotProduct(double[])>, Callee: {data=[0.2, 0.3],}, Params: [[23.0, 0.0]], Related test: test3(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double getValue(double[])>, Callee: {coefficients={data=[0.2, 0.3],}, constantTerm=0.0,}, Params: [[23.0, 0.0]], Related test: test3(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.util.MathUtils: boolean equals(double,double)>, Callee: null, Params: [23.0,0.0], Related test: test125(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.util.MathUtils: boolean equals(double,double,double)>, Callee: null, Params: [23.0,1.0,1.0E-6], Related test: test123(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.optimization.RealPointValuePair: double getValue()>, Callee: {point=[23.0, 0.0], value=4.6000000000000005,}, Params: [], Related test: test5(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
Method: <org.apache.commons.math.optimization.RealPointValuePair: void <init>(double[],double)>, Callee: null, Params: [[23.0, 0.0],4.6000000000000005], Related test: test5(org.apache.commons.math.optimization.linear.Math83AB_1_Test)
