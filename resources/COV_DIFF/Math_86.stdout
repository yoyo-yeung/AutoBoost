Method: <org.apache.commons.math.linear.DenseRealMatrix: int blockWidth(int)>, Callee: {lu=null, blocks=[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0], Related test: test11(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: void <init>(int,int,double[][],boolean)>, Callee: null, Params: [5,5,[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855, 0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796, 0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997, 0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0, 0.0, 0.0, 0.0, 0.0, NaN]],false], Related test: test10(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [3,0], Related test: test28(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [1,0], Related test: test18(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [3,2], Related test: test30(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [3,1], Related test: test29(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [1,2], Related test: test20(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [3,4], Related test: test32(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [1,1], Related test: test19(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [3,3], Related test: test31(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [1,4], Related test: test22(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [1,3], Related test: test21(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: int blockHeight(int)>, Callee: {lu=null, blocks=[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855, 0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796, 0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997, 0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0, 0.0, 0.0, 0.0, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0], Related test: test10(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: void <init>(double[][])>, Callee: null, Params: [[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855], [0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796], [0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997], [0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0], [0.0, 0.0, 0.0, 0.0, NaN]]], Related test: test10(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: int blockWidth(int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0], Related test: test13(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: int getColumnDimension()>, Callee: {lu=null, blocks=[[3.7416573867739413, 0.0, 0.0, 0.0, 0.0, 2.9398736610366685, 5.035587637718447, 0.0, 0.0, 0.0, 3.474396144861517, 0.5532054024535757, 1.2737877418422607, 0.0, 0.0, 4.008918628686366, -0.7517919571805008, 1.1676387633554053, 4.9421560620597E-8, 0.0, 6.4142698058981855, 1.2198888361796796, -1.5391601880593997, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [], Related test: test10(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: org.apache.commons.math.linear.DenseRealMatrix transpose()>, Callee: {lu=null, blocks=[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855, 0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796, 0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997, 0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0, 0.0, 0.0, 0.0, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [], Related test: test10(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [4,1], Related test: test34(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [4,0], Related test: test33(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [2,1], Related test: test24(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [4,3], Related test: test36(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [2,0], Related test: test23(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [4,2], Related test: test35(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0,1], Related test: test14(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [2,3], Related test: test26(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: int getRowDimension()>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [], Related test: test11(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0,0], Related test: test13(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [2,2], Related test: test25(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [4,4], Related test: test37(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0,3], Related test: test16(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: org.apache.commons.math.linear.DenseRealMatrix multiply(org.apache.commons.math.linear.DenseRealMatrix)>, Callee: {lu=null, blocks=[[3.7416573867739413, 0.0, 0.0, 0.0, 0.0, 2.9398736610366685, 5.035587637718447, 0.0, 0.0, 0.0, 3.474396144861517, 0.5532054024535757, 1.2737877418422607, 0.0, 0.0, 4.008918628686366, -0.7517919571805008, 1.1676387633554053, 4.9421560620597E-8, 0.0, 6.4142698058981855, 1.2198888361796796, -1.5391601880593997, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [{lu=null, blocks=[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855, 0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796, 0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997, 0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0, 0.0, 0.0, 0.0, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}], Related test: test11(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.MatrixUtils: void checkMultiplicationCompatible(org.apache.commons.math.linear.AnyMatrix,org.apache.commons.math.linear.AnyMatrix)>, Callee: null, Params: [{lu=null, blocks=[[3.7416573867739413, 0.0, 0.0, 0.0, 0.0, 2.9398736610366685, 5.035587637718447, 0.0, 0.0, 0.0, 3.474396144861517, 0.5532054024535757, 1.2737877418422607, 0.0, 0.0, 4.008918628686366, -0.7517919571805008, 1.1676387633554053, 4.9421560620597E-8, 0.0, 6.4142698058981855, 1.2198888361796796, -1.5391601880593997, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,},{lu=null, blocks=[[3.7416573867739413, 2.9398736610366685, 3.474396144861517, 4.008918628686366, 6.4142698058981855, 0.0, 5.035587637718447, 0.5532054024535757, -0.7517919571805008, 1.2198888361796796, 0.0, 0.0, 1.2737877418422607, 1.1676387633554053, -1.5391601880593997, 0.0, 0.0, 0.0, 4.9421560620597E-8, 0.0, 0.0, 0.0, 0.0, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}], Related test: test11(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0,2], Related test: test15(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [2,4], Related test: test27(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: int blockWidth(int)>, Callee: {lu=null, blocks=[[3.7416573867739413, 0.0, 0.0, 0.0, 0.0, 2.9398736610366685, 5.035587637718447, 0.0, 0.0, 0.0, 3.474396144861517, 0.5532054024535757, 1.2737877418422607, 0.0, 0.0, 4.008918628686366, -0.7517919571805008, 1.1676387633554053, 4.9421560620597E-8, 0.0, 6.4142698058981855, 1.2198888361796796, -1.5391601880593997, 0.0, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0], Related test: test11(org.apache.commons.math.linear.Math86AB_1_Test)
Method: <org.apache.commons.math.linear.DenseRealMatrix: double getEntry(int,int)>, Callee: {lu=null, blocks=[[14.0, 11.0, 13.0, 15.0, NaN, 11.0, 34.0, 13.0, 8.0, NaN, 13.0, 13.0, 13.999999999999998, 15.0, NaN, 15.0, 8.0, 15.0, 18.000000000000004, NaN, NaN, NaN, NaN, NaN, NaN]], rows=5, columns=5, blockRows=1, blockColumns=1,}, Params: [0,4], Related test: test17(org.apache.commons.math.linear.Math86AB_1_Test)